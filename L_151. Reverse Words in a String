// Space Complexity = O(1)

class Solution {
public:
  string reverseWords(string s) {
    while(s[0]==' ') 
     s.erase(0,1);  // Remove spaces from the begining
    while(s[s.size()-1]==' ')
     s.erase(s.size()-1); // Remove spaces from the ending
    int i=0, space_count=0;
    /*Now we count the middle spaces b/w two words, if more than one space found b/w two       words, then remove it*/    
    while(s[i])
    {
      /* if the character is not space, then this is the starting of a new word.
      So make the space count 0. */
      if(s[i]==' ') space_count++;
      else
        space_count=0;
      if(space_count>1){
        s.erase(i,1);
        continue;
      }
      i++;
    }
    reverse(s.begin(),s.end());
    int left = 0;
    for(i=1;i<s.size();i++){
      if(s[i]==' ') // space found means we have a word in our left and we have to reverse it
      {
        reverse(s.begin()+left, s.begin()+i);
        left=i+1;
      }
      else if(i==s.size()-1)
      {
        reverse(s.begin()+left, s.begin()+i+1);
      }                                   
    }
    return s;
  }
};
